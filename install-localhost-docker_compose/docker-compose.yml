version: "3.5"

services:

  db-server:
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - db-server-vol:/var/lib/postgresql/data

  auth-server:
    image: ngineapps/concierge-auth-server:0.0.1-20231006-131827
    ports:
      - "8080:8080"

  discovery-server:
    image: ngineapps/concierge-discovery-service:0.0.1-20231006-131827
    ports:
      - "8018:8018"

  gateway-server:
    image: ngineapps/concierge-api-gateway:0.0.1-20231006-131827
    environment:
      - DEFAULT_ZONE=http://discovery-server:8018/eureka/
    ports:
      - "8008:8008"
    depends_on:
      - discovery-server

  debit-accounts:
    image: ngineapps/concierge-debit-accounts:0.0.1-20231006-131827
    environment:
      - DEBIT_ACCOUNTS_DB_USER=postgres
      - DEBIT_ACCOUNTS_DB_PASSWORD=postgres
      - DEBIT_ACCOUNTS_DB_NAME=postgres
      - DEBIT_ACCOUNTS_DB_READ_WRITE_HOST=db-server
      - DEBIT_ACCOUNTS_DB_READ_WRITE_PORT=5432
      - DEBIT_ACCOUNTS_DB_READ_ONLY_HOST=db-server
      - DEBIT_ACCOUNTS_DB_READ_ONLY_PORT=5432
      - DISCOVERY_ENDPOINT=http://discovery-server:8018/eureka/
      - GATEWAY_URL=http://gateway-server:8008
      - ISSUER_URI=http://auth-server:8080/auth/realms/concierge
      #- ISSUER_URI=http://concierge.starlingapps.com/auth/realms/concierge
      # Use this to build auth-server image: frontendUrl" : "http://auth-server.starlingapps.com/auth"
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,address=5000,server=y,suspend=n
    depends_on:
      - auth-server
      - db-server
      - gateway-server
    ports:
      - "5000:5000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://auth-server:8080/auth/realms/concierge" ]
      #test: [ "CMD", "curl", "-f", "http://auth-server.starlingapps.com/auth/realms/concierge" ]
      interval: 5s
      timeout: 1s
      retries: 10
      start_period: 10s

  user-management:
    image: ngineapps/concierge-user-management:0.0.1-20231006-131827
    environment:
      - USER_MANAGEMENT_DB_USER=postgres
      - USER_MANAGEMENT_DB_PASSWORD=postgres
      - USER_MANAGEMENT_DB_NAME=postgres
      - USER_MANAGEMENT_DB_READ_WRITE_HOST=db-server
      - USER_MANAGEMENT_DB_READ_WRITE_PORT=5432
      - USER_MANAGEMENT_DB_READ_ONLY_HOST=db-server
      - USER_MANAGEMENT_DB_READ_ONLY_PORT=5432
      - DISCOVERY_ENDPOINT=http://discovery-server:8018/eureka/
      - GATEWAY_URL=http://gateway-server:8008
      - ISSUER_URI=http://auth-server:8080/auth/realms/concierge
      #- ISSUER_URI=http://concierge.starlingapps.com/auth/realms/concierge
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,address=5001,server=y,suspend=n
    depends_on:
      - auth-server
      - db-server
      - gateway-server
    ports:
      - "5001:5001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://auth-server:8080/auth/realms/concierge" ]
      #test: [ "CMD", "curl", "-f", "http://concierge.starlingapps.com/auth/realms/concierge" ]
      interval: 5s
      timeout: 1s
      retries: 10
      start_period: 10s

  aws_test:
    image: ngineapps/concierge-aws-tes:0.0.1-20231006-131827
    ports:
      - "8090:8090"

networks:
  default:
    external:
      name: concierge

volumes:
  auth-server-vol:
    external: true
  db-server-vol:
    external: true
