apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: task-app
  template:
    metadata:
      labels:
        app: task-app
    spec:
      containers:
      - name: task-app
        image: ngineapps/task-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  labels:
    job: task-app
  name: task-app-service
spec:
  type: ClusterIP
  selector:
    app: task-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: web

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: task-app
  labels:
    release: prometeo
    app: task-app
spec:
  jobLabel: job
  endpoints:
    - port: web
      path: /actuator/prometheus
      interval: 30s  
  selector:
    matchLabels:
      job: task-app

---

apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: task-app-rules
  labels:
    release: prometeo
spec:
  groups:
    - name: task-app
      rules:
        - alert: down
          expr: up == 0
          for: 0m
          labels:
            severity: critical
          annotations:
            summary: Prometheus target missing {{ $labels.instance }}

---

apiVersion: v1
kind: Service
metadata:
  name: task-app-node-service
spec:
  type: ClusterIP
  selector:
    app: task-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: web

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: task-app-ingress
  namespace: default
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  -  http:
      paths:
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: task-app-service
            port:
              number: 8080

---

apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: task-app-config
  labels:
    release: prometeo
spec:
  route:
    groupBy: ["severity"]
    groupWait: 30s
    groupInterval: 5m
    repeatInterval: 12h
    receiver: "webhook"
  receivers:
    - name: "webhook"
      webhookConfigs:
        - url: "http://example.com"
